% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rogue.plot.R
\name{randomize.state.labels}
\alias{randomize.state.labels}
\title{Randomize state labels}
\usage{
randomize.state.labels(alignment, ordered.chars = NULL, return.as.list = F)
}
\arguments{
\item{alignment}{An alignment of characters, either standard or DNA, in the
form of either a list of the same length as there are taxa in the
alignment, or as a matrix with as many rows as taxa and as many columns
as characters.}

\item{ordered.chars}{an optional vector giving the indices of those
characters that should be treated as ordered. Defaults to \code{NULL}, in
which case all characters are assumed as being unordered.}

\item{return.as.list}{a logical specifying whether the new alignment should
be returned as a list (if \code{TRUE}) or as a matrix (if \code{FALSE}).}
}
\value{
\code{randomize.state.labels} returns either a list with each element
  representing a taxon (if \code{return.as.list} equals \code{TRUE}), or a
  matrix with each row representing a taxon.
}
\description{
State labels are randomized, perserving the size of the state space,
   polymorphisms, and ordered characters.
}
\details{
State labels typically have different meanings among different characters in
  a morphological matrix. Nevertheless, the state label "0" is more often
  used for "absence" of a particular state; state labels are thus arbitrary,
  but not entirely random. The asymmetrical model (Lewis 2001) implemented
  in software such as MrBayes allows for asymmetry in the transitions
  between states, assuming an underlying binomial (for binary characters) or
  Dirichlet distribution (for multi-state characters), which implies that
  state labels should be random, and not only arbitrary.
This function randomizes the state labels of all the characters so that they
  are truly random. It can cope with ordered characters by only randomizing
  the direction of the ordering, while preserving the sequence. It is also
  treating polymorphisms properly.
}
\examples{
data(orig.morpho)
rand.morpho <- randomize.state.labels(orig.morpho, return.as.list = TRUE)
str(unlist(lapply(orig.morpho, "[", 14)))
str(unlist(lapply(rand.morpho, "[", 14)))
}
\references{
Lewis (2001) A likelihood approach to estimating phylogeny from discrete
  morphological character data. Systematic Biology, 50, 913-925.
}
